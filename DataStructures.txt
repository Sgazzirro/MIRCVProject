Vocabulary.bin file
JAVA STRUCTURE
+-------------------------------------------+
|   term    |   DF  |   UB  |  PostingList  |
+-------------------------------------------+
WHATS WRITTEN INSTEAD
+-----------------------------------------------------------------+
|   term    |   DF  |   UB  |  IDF  | docO | docL | termO | termL |
+-----------------------------------------------------------------+
Ordered by term:
DF -> Document Frequency, Length of the posting list,
        Number of Postings
UB -> Upper Bound, a double computed during index creation
IDF -> Inverse Document Frequency, computed ad log(N/DF)
docO -> DocumentIdOffset, the offset (in byte) at which the list is stored
docL -> The length of the list in byte
termO -> TermFreqOffset, the offset (in byte) at which the list is stored
termL -> The length of the list in byte

---------------------------------------------------------------------------
DocumentIndex.bin file
JAVA STRUCTURE
(DocumentIndex.java)
+---------------------------------------------------------------+
|   totalLen    |   numDocuments  | Map<Integer, DocIndexEntry> |
+---------------------------------------------------------------+
(DocIndexEntry.java)
+-------------+
|   length    |
+-------------+

WHATS WRITTEN INSTEAD
+---------------------------------+
|   totalLen    |   numDocuments  |
+---------------------------------+
....
+--------------+
|  docID | len |
+--------------+
....
Ordered by DocIds (the integer of the map)
TWO INTEGERS AT THE BEGINNING
L, N
THEN A LIST
docID -> The integer associated with that document
len -> The length of that document

---------------------------------------------------------------------------
doc_ids.bin  & term_freq.bin file
BINARY VERSION
When written, I encode this data structure
PostingListImpl.java
+-------------------------------------+
|   List<DocID>    |   List<TermFreq> |
+-------------------------------------+
Into
+-------------------------+
|   WrittenInt(DocID_0)   |
+-------------------------+
....
+-----------------------------+
|   WrittenFreq(TermFreq_0)   |
+-----------------------------+
....
the writing of a posting list makes the
COMPUTATION of offset and length (for voc entry)

When fetching, we use the informations stored into the
vocabulary entry to fetch the correct number of bytes from the bynary
lists
---------------------------------------------------------------------------

COMPRESSED VERSION




